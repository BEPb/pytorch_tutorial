"""
Python 3.10 программа для изучения базовой математики с Pytorch
Название файла 02_BasicMath.py

Version: 0.1
Author: Andrej Marinchenko
Date: 2022-05-02
"""

import torch  # библиотека pytorch

'''
Базовая математика с Pytorch
Изменить размер: view()
a и b являются тензорными.
Дополнение: torch.add(a,b) = a + b
Вычитание: a.sub(b) = a - b
Поэлементное умножение: torch.mul(a,b) = a * b
Поэлементное деление: torch.div(a,b) = a / b
Среднее значение: a.mean()
Стандартное отклонение (стандартное): a.std()
'''
# создадим тензор 3х3 заполненный единицами
tensor = torch.ones(3, 3)
print("тензор 3х3 заполненный единицами\n", tensor)

# изменим размер существующего тензора на 9х1
print("Изменим размер из 3х3 на 9х1 {}{}\n".format(tensor.view(9).shape, tensor.view(9)))

# Сложение
print("Сложение двух единичных тензоров: {}\n".format(torch.add(tensor, tensor)))

# Вычитание
print("Вычитания: {}\n".format(tensor.sub(tensor)))

# Умножение
print("Умножение: {}\n".format(torch.mul(tensor, tensor)))

# Деление
print("Деление: {}\n".format(torch.div(tensor, tensor)))

# Среднее значение
tensor = torch.Tensor([1, 2, 3, 4, 5])
print("Mean: {}".format(tensor.mean()))

# Стандартное отклонение
print("Стандартное отклонение: {}".format(tensor.std()))



'''Умножение тензоров, добавление друг к другу и другие алгебраические операции:'''
x = torch.ones(2, 3)  # тензор заполнен 1
print('\n\n Тензор единиц: \n', x)
y = torch.ones(2, 3) * 2  # тензор заполнен 2
print('\n\n Результат умножения тензора единиц на 2: \n', y)
print('\n\n Результат сложения тензоров: \n', x + y)  # результат добавления тензоров


'''Распределение является одним из наиболее часто используемых методов кодирования. Поэтому давайте узнаем, 
как сделать это с помощью pytorch. Чтобы узнать, сравните numpy и tensor 
np.ones() = torch.ones()
np.random.rand() = torch.rand()
'''

y = torch.ones(2, 3) * 2  # тензор заполнен 2
print('До преобразования: \n', y)
'''Также доступна работа с функцией частичного преобразования тензора. Например y[:,1]:'''
y[:, 1] = y[:, 1] + 1
print('\n После преобразования: \n', y)